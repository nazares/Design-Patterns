/' ABSTRACT FACTORY '/

@startuml AbstractFactory

title Abstract Factory UML diagram

skinparam linetype polyline
skinparam linetype ortho

' left to right direction

hide empty members

class Client

interface AbstractFactory <<interface>> {
    + createProductA()
    + createProductB()
}

class ConcreteFactory1 {
    + createProductA()
    + createProductB()
}

class ConcreteFactory2 {
    + createProductA()
    + createProductB()
}

interface AbstractProductA <<interface>>

class ProductA2
class ProductA1

interface AbstractProductB <<interface>>
class ProductB2
class ProductB1

ConcreteFactory1 ...|> AbstractFactory
' (ProductA1, ProductB1) <- ConcreteFactory1
AbstractFactory <|.. ConcreteFactory2
' (ProductA2, ProductB2) <- ConcreteFactory2
' ProductA1 --|> AbstractProductA
' AbstractProductA <|-- ProductA2
' ProductB1 --|> AbstractProductB
' AbstractProductB <|-- ProductB2

' ProductA1 <- ConcreteFactory1

(ProductB1, ProductA1) - ConcreteFactory1
(ProductB2, ProductA2) - ConcreteFactory2
' ConcreteFactory1 -> ProductB1
' ProductA2 <- ConcreteFactory2
' ProductB2 <- ConcreteFactory2
' ConcreteFactory2 -> ProductB2

ProductA1 --|> AbstractProductA
AbstractProductA <|-- ProductA2

ProductB1 --|> AbstractProductB
AbstractProductB <|-- ProductB2

AbstractProductB -[hidden]l- AbstractProductA

ProductB1 -[hidden]l- ProductA1
ProductB2 -[hidden]l- ProductA2

ProductB1 -[hidden]-> ProductB2
ProductA1 -[hidden]-> ProductA2

AbstractProductB ..[hidden]r.. AbstractFactory

AbstractFactory <-o Client
@enduml